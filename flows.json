[
    {
        "id": "6ab6839dd40d759c",
        "type": "tab",
        "label": "Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f5132a112b2c074a",
        "type": "aedes broker",
        "z": "6ab6839dd40d759c",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 210,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5df145296287e91b",
        "type": "mongodb4",
        "z": "6ab6839dd40d759c",
        "clientNode": "3d4e5d0ab7e70847",
        "mode": "collection",
        "collection": "temphumids",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 600,
        "y": 440,
        "wires": [
            [
                "84732d60464ee82e"
            ]
        ]
    },
    {
        "id": "84732d60464ee82e",
        "type": "debug",
        "z": "6ab6839dd40d759c",
        "name": "Debug DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 440,
        "wires": []
    },
    {
        "id": "3ef5d9b7041424ad",
        "type": "mqtt in",
        "z": "6ab6839dd40d759c",
        "name": "",
        "topic": "/topic/dataset",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "8066bf8146b9e783",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 440,
        "wires": [
            [
                "5df145296287e91b",
                "d06a572132daf271",
                "fe78f651e4c279c7"
            ]
        ]
    },
    {
        "id": "d13b66bef1c20fc3",
        "type": "ui_gauge",
        "z": "6ab6839dd40d759c",
        "name": "",
        "group": "f4836054bb7703ba",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": "20",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "2e51ab65d5034bc4",
        "type": "ui_gauge",
        "z": "6ab6839dd40d759c",
        "name": "",
        "group": "f4836054bb7703ba",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 700,
        "y": 520,
        "wires": []
    },
    {
        "id": "d06a572132daf271",
        "type": "function",
        "z": "6ab6839dd40d759c",
        "name": "Temp Value",
        "func": "let obj = msg.payload;\nmsg.payload = obj.temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "2716732e7bcd9525",
                "7183ceac3cee69c5",
                "d13b66bef1c20fc3"
            ]
        ]
    },
    {
        "id": "2716732e7bcd9525",
        "type": "function",
        "z": "6ab6839dd40d759c",
        "name": "Temp String",
        "func": "let obj = msg.payload;\nmsg.payload = \"Temperature: \" + obj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "4b6d325560f5c1a4"
            ]
        ]
    },
    {
        "id": "4b6d325560f5c1a4",
        "type": "debug",
        "z": "6ab6839dd40d759c",
        "name": "DBG Temp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "fe78f651e4c279c7",
        "type": "function",
        "z": "6ab6839dd40d759c",
        "name": "Hum Value",
        "func": "let obj = msg.payload;\nmsg.payload = obj.humidity;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 580,
        "wires": [
            [
                "55f09d09fc54802e",
                "2e51ab65d5034bc4",
                "e6d82bb72031674c"
            ]
        ]
    },
    {
        "id": "55f09d09fc54802e",
        "type": "function",
        "z": "6ab6839dd40d759c",
        "name": "Hum String",
        "func": "let obj = \"Humidity: \" + msg.payload;\nmsg.payload = obj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 580,
        "wires": [
            [
                "5ad6b8836d109b2b"
            ]
        ]
    },
    {
        "id": "5ad6b8836d109b2b",
        "type": "debug",
        "z": "6ab6839dd40d759c",
        "name": "DBG Humidity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 580,
        "wires": []
    },
    {
        "id": "e6d82bb72031674c",
        "type": "ui_chart",
        "z": "6ab6839dd40d759c",
        "name": "",
        "group": "f4836054bb7703ba",
        "order": 50,
        "width": 0,
        "height": 0,
        "label": "Hum Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7183ceac3cee69c5",
        "type": "ui_chart",
        "z": "6ab6839dd40d759c",
        "name": "",
        "group": "f4836054bb7703ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temp Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3d4e5d0ab7e70847",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "MQTT_Sensor",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "8066bf8146b9e783",
        "type": "mqtt-broker",
        "name": "Local",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f4836054bb7703ba",
        "type": "ui_group",
        "name": "Dashboard",
        "tab": "61cd882d7c8b5564",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "61cd882d7c8b5564",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]